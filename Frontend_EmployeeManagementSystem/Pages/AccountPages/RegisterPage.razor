@page "/identity/account/register"

@layout AuthenticationLayout


<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <div class="card bg-dark" style="opacity:0.5; margin-top:25%; border-radius:10px; color:white; font-weight:bold">
                    <div class="card-header text-center fs-5">Đăng ký tài khoản tại đây!</div>
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                            <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                <img src="../images/companylogos/minhminh.jpg" style="border-radius:15px" height="50" width="50" />
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Họ và tên</label>
                            <InputText class="form-control" @bind-Value="User.Fullname"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText class="form-control" @bind-Value="User.Email"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Mật khẩu</label>
                            <input class="form-control" type="password" @bind="User.Password"></input>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Nhập lại mật khẩu</label>
                            <input class="form-control" type="password" @bind="User.ConfirmPassword"></input>
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-outline-primary float-end">Đăng ký</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Đã có tài khoản? |
                            <a class="btn-link" href="identity/account/login">Đăng nhập</a>
                        </span>
                        <ValidationSummary />
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4">
        </div>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    // Khởi tạo đối tượng User
    Register User = new();

    // Khai báo các dịch vụ cần sử dụng
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    // Phương thức xử lý khi form hợp lệ
    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        // Gửi thông tin đến API
        var result = await accountService.CreatAsync(User);

        // Kiểm tra kết quả trả về
        if (result.Flag)
        {
            
            await DisplayDialogAndRedirect(result.Message!, "Thành công!");
            User = new();
        }
        else
        {
            await DisplayDialog(result.Message, "Thông báo!");
            ShowLoadingButton = false; 
        }
        ShowLoadingButton = false;
    }

    private async Task DisplayDialogAndRedirect(string content, string title)
    {
        // Hiển thị thông báo
        await dialogService.AlertAsync(content, title);

        // Chờ 2 giây
        await Task.Delay(2000);

        // Chuyển hướng sang trang login
        NavManager.NavigateTo("/identity/account/login");
    }

    private async Task DisplayDialog(string content, string title)
    {
        await dialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
        {
            NavManager.NavigateTo("/home/dashboard");
        }
    }
}
